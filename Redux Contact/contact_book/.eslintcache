[{"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\index.js":"1","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\App.js":"2","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Navbar.js":"3","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contacts.js":"4","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\store.js":"5","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact.js":"6","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact\\AddContact.js":"7","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Actions\\contactAction.js":"8","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Reducer\\ContactReducer.js":"9","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Reducer\\RootReducer.js":"10","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Type\\actionType.js":"11","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact\\EditContact.js":"12"},{"size":227,"mtime":1610431156410,"results":"13","hashOfConfig":"14"},{"size":959,"mtime":1610464397696,"results":"15","hashOfConfig":"14"},{"size":543,"mtime":1610454048992,"results":"16","hashOfConfig":"14"},{"size":917,"mtime":1610452918611,"results":"17","hashOfConfig":"14"},{"size":307,"mtime":1610460465142,"results":"18","hashOfConfig":"14"},{"size":1474,"mtime":1610461246542,"results":"19","hashOfConfig":"14"},{"size":2399,"mtime":1610473732879,"results":"20","hashOfConfig":"14"},{"size":445,"mtime":1610474793142,"results":"21","hashOfConfig":"14"},{"size":7081,"mtime":1610475058890,"results":"22","hashOfConfig":"14"},{"size":164,"mtime":1610460079164,"results":"23","hashOfConfig":"14"},{"size":141,"mtime":1610474761592,"results":"24","hashOfConfig":"14"},{"size":2679,"mtime":1610475176162,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9vhkkh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\index.js",[],["53","54"],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\App.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Navbar.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contacts.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\store.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact.js",["55"],"import React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Contact = () => {\r\n  const contactInfo = useSelector((state) => state.contacts.contacts);\r\n  console.log(contactInfo);\r\n  return (\r\n    <>\r\n      {contactInfo.map(function (eachContact, index) {\r\n        // <td>Action</td>\r\n        // console.log(eachContact);\r\n        return (\r\n          <tr key={eachContact.id}>\r\n            <td>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" />\r\n                <label className=\"custom-control-label\"></label>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <Avatar\r\n                name={eachContact.name}\r\n                size=\"40\"\r\n                round={true}\r\n                className=\"mr-2\"\r\n              />\r\n              {eachContact.name}\r\n            </td>\r\n            <td>{eachContact.phone}</td>\r\n            <td>{eachContact.email}</td>\r\n            <td className=\"action\">\r\n              <Link to={`/editContact/${eachContact.id}`}>\r\n                <span className=\"material-icons\">edit</span>\r\n              </Link>\r\n              <a href=\"#\">\r\n                <span className=\"material-icons\">remove_circle</span>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact\\AddContact.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Actions\\contactAction.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Reducer\\ContactReducer.js",["56","57"],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Reducer\\RootReducer.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Type\\actionType.js",[],"C:\\Users\\Sarvesh\\Desktop\\Redux Contact\\contact_book\\src\\Components\\Contact\\EditContact.js",["58","59"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getContact, updatedContact } from \"../../Actions/contactAction\";\r\nconst EditContact = () => {\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  const contactId = useSelector((state) => state.contacts.contactId);\r\n  // console.log(contactId);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [telephone, setTelephone] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (contactId !== null) {\r\n      setEmail(contactId.email);\r\n      setName(contactId.name);\r\n      setTelephone(contactId.phone);\r\n    }\r\n    dispatch(getContact(id));\r\n  }, [contactId]);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const updateChanges = Object.assign(contactId, {\r\n      name: name,\r\n      email: email,\r\n      phone: telephone,\r\n    });\r\n    dispatch(updatedContact(updateChanges));\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">UserName</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone\">Contact Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            placeholder=\"123-45-678\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n            className=\"form-control\"\r\n            value={telephone}\r\n            onChange={(e) => setTelephone(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Edit Contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":37,"column":15,"nodeType":"66","endLine":37,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":251,"column":33,"nodeType":"69","messageId":"70","endLine":251,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":269,"column":22,"nodeType":"69","messageId":"70","endLine":269,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":23,"column":6,"nodeType":"77","endLine":23,"endColumn":17,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'shortid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [contactId, dispatch, id]",{"range":"84","text":"85"},[837,848],"[contactId, dispatch, id]"]